server:
  port: 9999
spring:
  application:
    name: service-gateway
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    #spring.cloud.gateway.discovery.locator.enabled：是否与服务发现组件进行结合，通过 serviceId 转发到具体的服务实例。
    #默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
    gateway:
      discovery:
        locator:
          enabled: true
      #配置默认过滤器（工厂）
      default-filters:
      - Elapsed=true #为ElapsedGatewayFilterFactory实例（构造方法）传递Config的withParams参数值
      routes:
      #配置权重路由--注意这里的路由配置信息一定不要与已配置的有重合，冲突！！比如已配置了路径/test/prefix/**路由到lb://SC-CONSUMER，这里即使配置路径路由到lb://SC-CONSUMER/v1也会失败，因为有重合，冲突
      - id: service1_v1
        uri: http://localhost:8888/v1
        predicates:
        - Path=/test-weight
        - Weight=service1, 95

      - id: service1_v2
        uri: http://localhost:8888/v2
        predicates:
        - Path=/test-weight
        - Weight=service1, 5


      - id: host_route
        uri: http://www.baidu.com
        predicates:
        - Path=/a/**
        filters:
        - StripPrefix=1
      #DynamicRouteService类中"main"方法中配置的等价配置
#      - id: header
#        uri: http://localhost:8888/header
#        filters:
#        - AddRequestHeader=header, addHeader
#        - AddRequestParameter=param, addParam
#        predicates:
#        - Path=/jd
redis:
  host: 127.0.0.1
  port: 6379
  pool:
    max-active: 8
    max-wait: 1
    max-idle: 8
    min-idle: 0
  timeout: 0
logging:
  level:
    org.springframework.cloud.gateway: debug